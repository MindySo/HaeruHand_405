#############################
#  NETWORKS & VOLUMES
#############################
networks:
  backend:
    driver: bridge

volumes:
  mysql-prod-data:
  redis-prod-data:

#############################
#  SERVICES
#############################
services:
  # ---------- Database ----------
  mysql:
    image: mysql:8.0
    container_name: haeruhand-db
    restart: always
    env_file: .env.prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+09:00
    volumes:
      - mysql-prod-data:/var/lib/mysql
      - ./init-sql:/docker-entrypoint-initdb.d:ro
    networks:
      - backend

  # ---------- Cache ----------
  redis:
    image: redis:7.2
    container_name: haeruhand-redis
    restart: always
    environment:
      - TZ=Asia/Seoul
    volumes:
      - redis-prod-data:/data
    networks:
      - backend

  # ---------- Spring Boot API ----------
  spring:
    image: ${REGISTRY}/haeruhand-spring:latest
    container_name: haeruhand-spring
    restart: always
    env_file: .env.prod
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - TZ=Asia/Seoul
      - JAVA_TOOL_OPTIONS=-Duser.timezone=Asia/Seoul
    depends_on:
      - mysql
      - redis
    networks:
      - backend

  # ---------- FastAPI AI Service ----------
  fastapi:
    image: ${REGISTRY}/haeruhand-ai:latest
    container_name: haeruhand-ai
    restart: always
    env_file: .env.prod
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - redis
    networks:
      - backend

  # ---------- Nginx Gateway ----------
  nginx:
    image: ${REGISTRY}/haeruhand-nginx:latest
    container_name: haeruhand-nginx
    restart: always
    env_file: .env.prod
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - spring
      - fastapi
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - backend

  # ---------- Certbot ----------
  certbot:
    image: certbot/certbot:latest
    container_name: haeruhand-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - backend
