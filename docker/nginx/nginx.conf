events {}

http {
  include       mime.types;
  default_type  application/json;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream spring-app {
    server haeruhand-spring:8080;
    keepalive 64;
  }

  # FastAPI AI - 4개 인스턴스로 확장 + 장애 감지
  upstream ai-app {
    least_conn;
    server haeruhand-ai1:8000 max_fails=1 fail_timeout=5s;
    server haeruhand-ai2:8000 max_fails=1 fail_timeout=5s;
    server haeruhand-ai3:8000 max_fails=1 fail_timeout=5s;
    server haeruhand-ai4:8000 max_fails=1 fail_timeout=5s;
    keepalive 32;
  }

  # ---------------------------
  # 80: ACME 응답 + HTTPS 리다이렉트
  # ---------------------------
  server {
    listen 80;
    server_name i13a405.p.ssafy.io;

    # 그 외는 전부 HTTPS로 리다이렉트
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # ---------------------------
  # 443: 실제 서비스
  # ---------------------------
  server {
    listen 443 ssl;
    http2 on;
    server_name i13a405.p.ssafy.io;

    # 인증서 경로 (compose에서 /etc/letsencrypt:ro 마운트됨)
    ssl_certificate     /etc/letsencrypt/live/i13a405.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/i13a405.p.ssafy.io/privkey.pem;

    # 기본 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_prefer_server_ciphers off;

    # HSTS: 처음엔 짧게(1일). 안정화되면 30일/1년로 점진 상향
    add_header Strict-Transport-Security "max-age=86400" always;

    # 공통 프록시 헤더
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Spring API
    location /api/ {
      proxy_http_version 1.1;
      proxy_pass http://spring-app/;
    }

    # Swagger UI (전체 경로 프록시)
    location /swagger-ui/ {
      proxy_http_version 1.1;
      proxy_pass http://spring-app/swagger-ui/;
    }

    # 구버전 호환성을 위한 리다이렉트
    location = /swagger-ui.html {
      return 301 /swagger-ui/index.html;
    }

    # Swagger API Docs
    location /v3/api-docs {
      proxy_http_version 1.1;
      proxy_pass http://spring-app/v3/api-docs;
    }

    # WebSocket (정확 경로가 /api/v1/ws 라면 = 매칭 유지)
    location = /api/v1/ws {
      proxy_http_version 1.1;
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
      proxy_read_timeout  86400;
      proxy_send_timeout  86400;
      proxy_buffering off;

      proxy_pass http://spring-app/v1/ws;
    }

    # FastAPI - 장애 감지/우회 로직 추가
    location /ai/ {
      proxy_http_version 1.1;
      
      # 업스트림 실패 시 다음 서버로 넘김
      proxy_next_upstream error timeout http_502 http_503 http_504;
      
      # 타임아웃 설정
      proxy_connect_timeout 5s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;
      
      proxy_pass http://ai-app/;
    }

    # 프론트엔드 정적
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html;

      # Mixed Content 방지를 위한 Content Security Policy (프론트엔드에만 적용)
      add_header Content-Security-Policy "upgrade-insecure-requests" always;

      # 정적 캐시
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
    }
  }
}
